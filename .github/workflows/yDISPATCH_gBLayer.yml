on:
    workflow_dispatch:
        inputs:
            bType:
                description: Boundary Type (Required)
                required: true
            ISO:
                description: Boundary ISO (Required)
                required: true
            ADM:
                description: Boundary ADM Level
                required: true
                
name: yDISPATCH_gBLayer
jobs:
  gbBuild:
    runs-on: ubuntu-latest
    container: docker://geogdan/geoboundaries:A
    steps:
    - name: Git Clone
      run: |
           echo $GITHUB_WORKSPACE
           cd $GITHUB_WORKSPACE
           cd ..
           rm -r geoBoundaries
           git config --global pack.window "0"
           echo "=============="
           add-apt-repository -y ppa:git-core/ppa
           apt-get -y update
           apt-get install -y git
           git --version
           git clone --filter=blob:none --no-checkout https://github.com/wmgeolab/geoBoundaries
           echo "=============="
           cd geoBoundaries
           echo "=============="
           git sparse-checkout set "sourceData/${{github.event.inputs.bType}}/${{github.event.inputs.ISO}}_${{github.event.inputs.ADM}}.zip"
           git sparse-checkout add ".gitattrbutes"
           git sparse-checkout add ".gitignore"
           git sparse-checkout add "releaseData/${{github.event.inputs.bType}}/${{github.event.inputs.ISO}}/${{github.event.inputs.ADM}}/"
           git checkout
           git clone https://github.com/wmgeolab/geoBoundaryBot
           ls -l
    - name: Checking Files
      id: checks
      run: |
           echo "==============================================="
           mkdir ~/tmp 
           mkdir ~/artifacts
           python $GITHUB_WORKSPACE/geoBoundaryBot/gbBuild.py ${{github.event.inputs.bType}} nightly ${{github.event.inputs.ISO}} ${{github.event.inputs.ADM}} ${{secrets.DRTOKEN}}
      env:
           GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
    
    - name: Commit Files
      env:
            DRTOKEN: ${{secrets.DRTOKEN}}
            REP: ${{env.GITHUB_REPOSITORY}}
      run: |
           cd $GITHUB_WORKSPACE
           ls
           echo "=============="
           git config --local user.email "danr@wm.edu"
           git config --local user.name "DanRunfola"
           git config --global http.postBuffer 500M
           git config --global http.maxRequestBuffer 100M
           git config --global core.compression 0
           git reset
           echo "================="
           find * -type f -size +99M -exec git lfs track --filename '{}' +       
           echo "================="
           git add "releaseData/${{github.event.inputs.bType}}/${{github.event.inputs.ISO}}/${{github.event.inputs.ADM}}/"
           echo "================="
           git add .gitattributes
           echo "================="
           git status
           echo "================="
           git commit -m "gB Nightly `date`"
           echo "================="
           git remote set-url origin https://x-access-token:${{ secrets.DRTOKEN }}@github.com/$GITHUB_REPOSITORY
           echo "================="
           git pull
           git push
        
    - name: Create Artifact
      uses: actions/upload-artifact@v2
      with:
        name: results
        path: ~/artifacts/
